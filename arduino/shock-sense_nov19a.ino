#include "arduino_secrets.h"
// HX711 - Version: Latest 
#include <HX711.h>
#include <OneWire.h>
#include <DallasTemperature.h>
/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/b9682e2d-182f-4bee-8301-9bae9de636f0 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  float centrTemp;
  int vaha;
  float perifTemp;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
HX711 scale;


const int pinsenzoru = D4;
OneWire oneWireDS(pinsenzoru);
DallasTemperature senzords(&oneWireDS);

const int LOADCELL_DOUT_PIN = D2;
const int LOADCELL_SCK_PIN = D1;
float volt;
float temp;
int anal;

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(115200);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 
  vaha = 0;
  scale.begin(LOADCELL_DOUT_PIN, LOADCELL_SCK_PIN);
  senzords.begin();
  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  // Your code here 
    //periferni teplota
  anal = analogRead(A0);
  volt = anal * (5000 / 1024.0);
  perifTemp = volt / 20;
  Serial.println(temp);

  //centralni teplota
  senzords.requestTemperatures();
  centrTemp = senzords.getTempCByIndex(0);

  //vaha
  if (scale.is_ready()) {
    long reading = scale.read();
    Serial.print("HX711 reading: ");
    vaha = ((reading - 139000)/936.4);
    Serial.println(vaha);
  } else {
    Serial.println("HX711 not found.");
  }
  delay(1000);
}
  


/*
  Since Vaha is READ_WRITE variable, onVahaChange() is
  executed every time a new value is received from IoT Cloud.
*/